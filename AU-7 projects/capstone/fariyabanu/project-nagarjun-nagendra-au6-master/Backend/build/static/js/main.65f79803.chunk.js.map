{"version":3,"sources":["assets/images/user.jpg","redux/action/user.js","redux/type.js","components/login.js","components/register.js","components/forgotPassword.js","redux/action/group.js","components/header.js","redux/action/request.js","page/home.js","page/profile.js","components/resetpassword.js","page/friend.js","redux/action/chat.js","page/group.js","page/userdetail.js","app.js","redux/reducer/user.js","redux/reducer/request.js","redux/reducer/group.js","redux/reducer/chat.js","redux/store.js","index.js","assets/images/ouricon.jpg"],"names":["module","exports","updateUser","user","dispatch","a","axios","defaults","withCredentials","formData","FormData","append","firstName","lastName","photoURL","method","url","userId","data","headers","type","payload","error","info","console","log","response","message","loginUser","email","password","isAuthenticated","allUser","users","forgotPassword","useremail","changePassword","resetToken","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","background","padding","boxShadow","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","useSelector","state","userState","history","useHistory","useDispatch","useState","isSubmitting","setState","handleChange","key","value","handleSubmit","e","preventDefault","push","Container","component","maxWidth","CssBaseline","className","Typography","variant","src","Ouricon","alt","style","onSubmit","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","target","Grid","item","xs","float","Link","href","Button","color","disabled","container","justify","Register","firstNameError","lastNameError","emailError","passwordError","newState","match","trim","length","props","registerUser","this","sm","helperText","accept","files","htmlFor","Tooltip","title","IconButton","aria-label","Component","connect","reset","Avatar","createGroup","group","groupName","findGroups","searchUser","searchQuery","root","height","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","menuLogo","textTransform","borderRadius","fontSize","search","position","shape","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","rootclick","dropdown","right","left","border","borderBottomLeftRadius","borderBottomRightRadius","isAuth","groupReducer","logout","useTheme","React","open","setOpen","openClick","setopenClick","anchorEl","setAnchorEl","searchQueryResult","handleClose","logoutUser","useEffect","handleSubmitSearch","prev","userDetailPage","AppBar","clsx","Toolbar","noWrap","to","textDecoration","cursor","InputBase","placeholder","input","inputProps","ClickAwayListener","onClickAway","direction","map","_id","onClick","Card","CardHeader","userimage","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","Boolean","onClose","MenuItem","Drawer","Divider","List","ListItem","button","ListItemIcon","minWidth","sendRequest","request","Home","snackbarOpen","snackbarMessage","snackbarSeverity","receiver","sender","acceptGroupRequest","groupId","updatetRequest","isAccepted","allRequest","Accept","friend","Reject","isReject","showSnackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","md","CardMedia","image","CardActions","fontWeight","Paper","textAlign","requests","size","CircularProgress","requestReducer","update","backdrop","token","removePhoto","file","removeImage","marginBottom","URL","createObjectURL","Backdrop","params","Friends","friends","selectFriend","messages","loading","openemoji","chosenEmoji","messageRef","createRef","socket","sendMessage","socketId","emit","renderCards","chats","chat","handleFrndChat","unread","singleChat","singleMessages","scrollToBottom","onChangeHandler","fileName","handleClickEmoji","handleClickAwayEmoji","onEmojiClick","emojiObject","emoji","current","scrollIntoView","allFriends","io","on","action","subheader","Date","updatedAt","toLocaleTimeString","toLocaleDateString","Fab","marginRight","ref","indexOf","controls","autoPlay","rel","Portal","chatReducer","friendId","root1","top","transform","allMessage","useRef","setOpenEmoji","openSearchDialog","setopenSearchDialog","selectedGroup","setLoading","setMessages","handleCloseSearch","sendGroupRequest","setTimeout","concat","openChatting","groups","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","createdAt","member","owner","phtoURL","typetype","Details","singleUser","oneuser","fr","App","path","exact","Login","Profile","resetPassword","Groups","initalstate","localStorage","getItem","JSON","parse","userReducer","Object","assign","setItem","stringify","removeItem","newState1","initialState","ChatReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.65f79803.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.2b156a14.jpg\";","import { LOGIN, LOGOUT, REGISTER, UPDATEUSER, ALLUSER, FORGOTPASSWORD, CHANGEPASSWORD, SINGLEUSER } from '../type';\nimport axios from 'axios';\n\nexport const registerUser = (user) => async dispatch => {\n    //console.log(user)\n    try {\n        const formData = new FormData();\n        formData.append(\"firstName\", user.firstName);\n        formData.append(\"lastName\", user.lastName);\n        formData.append(\"email\", user.email);\n        formData.append(\"password\", user.password);\n        if (user.photoURL) {\n            formData.append(\"photoURL\", user.photoURL, user.photoURL.name);\n        }\n\n        const { data } = await axios({\n            method: \"post\",\n            url: '/users/register',\n            data: formData,\n            headers: {\n                'content-type': 'multipart/form-data',\n                \"Accept\": \"application/json\",\n                \"type\": \"formData\"\n            }\n        }\n        );\n        //console.log(data, \"1234\")\n        dispatch({\n            type: REGISTER,\n            payload: {\n                error: null,\n                info: data\n            }\n        })\n\n    } catch (error) {\n        //console.log('adsfasdf', error.response.data)\n        dispatch({\n            type: REGISTER,\n            payload: {\n                error: error.response.data.error,\n                info: null\n            }\n        })\n\n\n    }\n}\n\nexport const updateUser = (user) => async dispatch => {\n    try {\n        axios.defaults.withCredentials = true;\n        const formData = new FormData();\n        formData.append(\"firstName\", user.firstName);\n        formData.append(\"lastName\", user.lastName);\n        formData.append(\"photoURL\", user.photoURL);\n\n        const { data } = await axios({\n            method: 'Put',\n            url: `/users/${user.userId}`,\n            data: formData,\n            headers: {\n                'content-type': 'multipart/form-data'\n\n            }\n        }\n        );\n        dispatch({\n            type: UPDATEUSER,\n            payload: {\n                error: null,\n                info: data,\n                photoURL: data.photoURL,\n                firstName: data.firstName,\n                lastName: data.lastName\n            }\n        })\n\n    } catch (error) {\n        console.log('adsfasdf', error.response)\n        dispatch({\n            type: UPDATEUSER,\n            payload: {\n                error: error.response ? error.response.data.message : \"update error\",\n                info: null\n            }\n        })\n\n\n    }\n}\nexport const loginUser = (user) => async dispatch => {\n    try {\n        const { data } = await axios({\n            method: \"post\",\n            url: `/users/login`,\n            data: {\n                email: user.email,\n                password: user.password\n            }\n        });\n        //console.log(data, \"dfhkgj \")\n        dispatch({\n            type: LOGIN,\n            payload: { error: null, user: data, isAuthenticated: true }\n        })\n    } catch (error) {\n        console.log(error.response.data)\n        dispatch({\n            type: LOGIN,\n            payload: {\n                error: error.response.data.error,\n                info: null,\n                isAuthenticated: false,\n                user: null\n            }\n        })\n\n    }\n}\n\nexport const logout = () => async dispatch => {\n    try {\n        await axios({\n            method: \"delete\",\n            url: `/users/logout`\n        });\n        dispatch({\n            type: LOGOUT,\n            payload: null\n        })\n    } catch (error) {\n        console.log(error)\n\n    }\n}\n\nexport const allUser = () => async dispatch => {\n    try {\n        axios.defaults.withCredentials = true;\n        const { data } = await axios(`/users/alluser`)\n        dispatch({\n            type: ALLUSER,\n            payload: { users: data }\n        })\n        //console.log(data)\n    } catch (error) {\n        console.log(error)\n\n    }\n}\n\nexport const forgotPassword = (user) => async dispatch => {\n    //console.log('user',user)\n    try {\n        const { data } = await axios({\n            method: \"post\",\n            url: `/users/forgotpassword`,\n            data: {\n                email: user.email\n            }\n        });\n        //console.log(\"data\",data)\n        dispatch({\n            type: FORGOTPASSWORD,\n            payload: { useremail: user.email, info: data.message }\n        })\n\n    } catch (error) {\n        console.log('errtyu', error.response.data)\n        dispatch({\n            type: FORGOTPASSWORD,\n            payload: {\n                error: error.response.data.error,\n                info: null\n            }\n        })\n    }\n}\n\nexport const changePassword = (user) => async dispatch => {\n    console.log(\"user\", user)\n    try {\n        const { data } = await axios({\n            method: \"post\",\n            url: `/users/Changepassword`,\n            data: {\n                resetToken: user.resetToken,\n                password: user.password,\n                email: user.email\n            }\n        });\n        console.log(\"data\", data)\n        dispatch({\n            type: CHANGEPASSWORD,\n            payload: { user: data, error: null }\n        })\n\n    } catch (error) {\n        console.log(error.response.data)\n        dispatch({\n            type: CHANGEPASSWORD,\n            payload: {\n                error: error.response.data.error,\n                info: null\n            }\n        })\n\n    }\n}\n\nexport const singleUser = (id) => async dispatch => {\n    try {\n        axios.defaults.withCredentials = true;\n        const { data } = await axios(`/users/${id}`)\n        dispatch({\n            type: SINGLEUSER,\n            payload: { oneuser: data }\n        });\n        //console.log(data);\n    } catch (error) {\n        console.log(error)\n\n    }\n}","export const LOGIN = \"LOGIN\";\nexport const REGISTER = \"REGISTER\";\nexport const LOGOUT = 'LOGOUT';\nexport const ALLUSER = 'ALLUSER';\nexport const FORGOTPASSWORD = \"FORGOTPASSWORD\";\nexport const CHANGEPASSWORD = \"CHANGEPASSWORD\";\nexport const REQUEST = \"REQUEST\";\nexport const ALLREQUEST = \"ALLREQUEST\";\nexport const UPDATEREQUEST = \"UPDATEREQUEST\";\nexport const FRIENDS = \"FRIENDS\";\nexport const CREATEGROUP = \"CREATEGROUP\";\nexport const FINDGROUP = \"FINDGROUP\";\nexport const SEARCHUSER = \"SEARCHUSER\";\nexport const ALLMESSAGE = \"ALLMESSAGE\";\nexport const SINGLECHAT = 'SINGLECHAT';\nexport const UPDATEUSER = 'UPDATEUSER';\nexport const SINGLEUSER = \"SINGLEUSER\";","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../redux/action/user';\nimport Ouricon from '../assets/images/ouricon.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    background: '#fff',\n    padding: theme.spacing(3),\n    boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const user = useSelector(state => state.userState);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    isSubmitting: false\n  });\n  const handleChange = (key, value) => {\n    setState({\n      ...state,\n      [key]: value\n    });\n  }\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setState({ ...state, isSubmitting: true });\n    await dispatch(loginUser(state));\n    setState({ ...state, isSubmitting: false });\n    //console.log(user.error);\n    if (!user.error) {\n      history.push('/');\n    }\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          <img src={Ouricon} alt=\"user\" style={{ width: \"100%\" }} />\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={state.email}\n            onChange={(e) => handleChange(\"email\", e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={state.password}\n            onChange={(e) => handleChange(\"password\", e.target.value)}\n          />\n          <Grid item xs style={{ float: \"right\" }}>\n            <Link href=\"/#/forgotPassword\" variant=\"body2\">\n              Forgot password?\n              </Link>\n          </Grid>\n          {user.error &&\n            <Grid item xs={12} className=\"error\">\n              <div className=\"error\">{user.error}</div>\n            </Grid>\n          }\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={state.isSubmitting}\n          >\n            Sign In\n          </Button>\n          <Grid container justify=\"center\" className=\"mt-2\">\n            <Grid item >\n              Don't have an account?\n              <Link href=\"/#/register\" variant=\"body2\" className=\"mt-2\">\n                {\"Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { registerUser } from '../redux/action/user';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Ouricon from '../assets/images/ouricon.jpg';\nimport { connect } from 'react-redux';\n\nclass Register extends Component {\n  state = {\n    firstName: \"\",\n    firstNameError: \"\",\n    lastName: \"\",\n    lastNameError: \"\",\n    email: \"\",\n    emailError: \"\",\n    password: \"\",\n    passwordError: \"\",\n    isSubmitting: false,\n    error: ''\n  };\n\n  handleChange = (key, value) => {\n    const newState = { ...this.state };\n    newState[key] = value;\n    if (key === 'firstName') {\n      newState.firstNameError = \"\";\n      if (!newState.firstName.match(/^[a-z ,.'-]{3,150}$/i)) {\n        newState.firstNameError = \"firstName is not valid\"\n      }\n      if (newState.firstName.trim() === \"\") {\n        newState.firstNameError = \"First name is required\"\n      }\n    }\n    if (key === 'lastName') {\n      newState.lastNameError = \"\";\n      if (!newState.lastName.match(/^[a-z ,.'-]{3,150}$/i)) {\n        newState.lastNameError = \"lastName is not valid\"\n      }\n      if (newState.lastName.trim() === \"\") {\n        newState.lastNameError = \"Last name is required\"\n      }\n    }\n    if (key === 'email') {\n      newState.emailError = \"\";\n      if (!newState.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n        newState.emailError = \"invalid email \"\n      }\n      if (newState.email.trim() === \"\") {\n        newState.emailError = \"email is required\"\n      }\n    }\n    if (key === \"password\") {\n      newState.passwordError = \"\";\n      if (newState.password.length < 5) {\n        newState.passwordError = \"Can not be less than 5\"\n      }\n      if (newState.password.trim() === \"\") {\n        newState.passwordError = \"password is required\"\n      }\n    }\n    this.setState(newState);\n  }\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const newState = { ...this.state };\n    if (newState.firstName.trim() === \"\" || newState.firstNameError) {\n      newState.firstNameError = newState.firstNameError || \"first name is required\"\n      this.setState(newState)\n      return\n    }\n    if (newState.lastName.trim() === \"\" || newState.lastNameError) {\n      newState.lastNameError = newState.lastNameError || \"last name is required\"\n      this.setState(newState);\n      return\n    }\n    if (newState.email.trim() === \"\" || newState.emailError) {\n      newState.emailError = newState.emailError || \"email is required\"\n      this.setState(newState);\n      return\n    }\n    if (newState.password.trim() === \"\" || newState.passwordError) {\n      newState.passwordError = newState.passwordError || \"password is required\"\n      this.setState(newState);\n      return\n    }\n\n    newState.isSubmitting = true;\n    this.setState(newState);\n    await this.props.registerUser(this.state);\n    newState.error = this.props.user.error;\n    newState.isSubmitting = false;\n    this.setState(newState);\n    if (!this.props.user.error) {\n      this.props.history.push('/login');\n    }\n\n  }\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\" >\n        <CssBaseline />\n        <div className=\"register-paper\">\n          <Typography component=\"h1\" variant=\"h5\">\n            <img src={Ouricon} alt=\"user\" style={{ width: \"100%\" }} />\n          </Typography>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n        </Typography>\n          <form onSubmit={this.handleSubmit} className=\"register-form\" noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  value={this.state.firstName}\n                  onChange={(e) => this.handleChange(\"firstName\", e.target.value)}\n                  error={!!this.state.firstNameError}\n                  helperText={this.state.firstNameError}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  value={this.state.lastName}\n                  onChange={(e) => this.handleChange(\"lastName\", e.target.value)}\n                  error={!!this.state.lastNameError}\n                  helperText={this.state.lastNameError}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={this.state.email}\n                  onChange={(e) => this.handleChange(\"email\", e.target.value)}\n                  error={!!this.state.emailError}\n                  helperText={this.state.emailError}\n\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={this.state.password}\n                  onChange={(e) => this.handleChange(\"password\", e.target.value)}\n                  error={!!this.state.passwordError}\n                  helperText={this.state.passwordError}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField accept=\"image/*\"\n                  id=\"icon-button-file\"\n                  type=\"file\"\n                  className=\"register-input\"\n                  onChange={(e) => this.handleChange(\"photoURL\", e.target.files[0])} />\n                <label htmlFor=\"icon-button-file\">\n                  <Tooltip title=\"Upload Photo\">\n                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                      <PhotoCamera />\n                    </IconButton>\n                  </Tooltip>\n                </label>\n              </Grid>\n              {this.state.error &&\n                <Grid item xs={12}>\n                  <div className=\"error\">{this.state.error}</div>\n                </Grid>\n              }\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"register-submit\"\n              disabled={this.state.isSubmitting}\n            >\n              Sign Up\n          </Button>\n            <Grid container justify=\"center\" className=\"mt-2\">\n              <Grid item>\n                Already have an account?\n              <Link href=\"/#/login\" variant=\"body2\">\n                  Sign in\n              </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userState\n  }\n}\n\nexport default connect(mapStateToProps, { registerUser })(Register);","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { forgotPassword } from '../redux/action/user';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        background: '#fff',\n        padding: theme.spacing(3),\n        boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\n\nconst SignIn = (props) => {\n    const classes = useStyles();\n    //const user = useSelector(state => state.userState);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        email: \"\",\n        isSubmitting: false\n    });\n    const handleChange = (key, value) => {\n        setState({\n            ...state,\n            [key]: value\n        });\n    }\n\n    const reset = async (e) => {\n        console.log('state',state)\n        e.preventDefault();\n        setState({ ...state, isSubmitting: true });\n        await dispatch(forgotPassword(state));\n        setState({ ...state, isSubmitting: false });\n        console.log(props.useremail.error)\n        if (!props.useremail.error) {\n            history.push('/Resetpassword/'+state.email);\n        }\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Forgot Password\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={reset}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={state.email}\n                        onChange={(e) => handleChange(\"email\", e.target.value)}\n                    />\n                    <Grid>\n                        <div className=\"error\">\n                            {props.useremail.error}\n                        </div>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={state.isSubmitting}\n                    >\n                        Send Reset Link\n          </Button>\n                    <Grid container>\n                        <Grid item xs>\n                        </Grid>\n                        <Grid item >\n                            Back to\n              <Link href=\"/#/login\" variant=\"body2\" className=\"mt-2\">\n                                {\" Sign in\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state)\n    return {\n        useremail: state.userState\n    }\n}\n\nexport default connect(mapStateToProps, { forgotPassword })(SignIn);","import { CREATEGROUP, FINDGROUP, SEARCHUSER } from \"../type\";\nimport axios from 'axios';\n\nexport const createGroup = (group) => async dispatch => {\n    try {\n        const { data } = await axios({\n            method: \"post\",\n            url: '/group',\n            data: {\n                groupName: group.groupName,\n                photoURL: group.photoURL\n            },\n        }\n        );\n        dispatch({\n            type: CREATEGROUP,\n            payload: {\n                error: null,\n                group: data\n            }\n        })\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type: CREATEGROUP,\n            payload: {\n                error: error.response.data.error,\n                group: null\n            }\n        })\n    }\n}\n\nexport const findGroups = () => async dispatch => {\n    try {\n        const { data } = await axios(`/group/find`);\n        dispatch({\n            type: FINDGROUP,\n            payload: data\n        })\n    } catch (error) {\n        console.log(error.response.data)\n        dispatch({\n            type: FINDGROUP,\n            payload: {\n                error: error.response.data.error,\n                group: null\n            }\n        })\n    }\n}\nexport const searchUser = (searchQuery) => async dispatch => {\n    try {\n        //console.log(searchQuery)\n        const { data } = await axios({\n            method: \"post\",\n            url: '/users/search',\n            data: searchQuery\n        }\n        );\n        //console.log(data)\n        dispatch({\n            type: SEARCHUSER,\n            payload: { searchQuery: data }\n        })\n\n    } catch (error) {\n        console.log(error)\n        console.log(error.response.data)\n        dispatch({\n            type: SEARCHUSER,\n            payload: {\n                error: error.response.data.error,\n                payload: null\n            }\n        })\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, fade } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { connect } from 'react-redux';\nimport { logout } from '../redux/action/user';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Ouricon from '../assets/images/ouricon.jpg';\nimport { searchUser } from '../redux/action/group';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grid from '@material-ui/core/Grid';\nimport userimage from '../assets/images/user.jpg';\nimport { Card, Avatar, CardHeader } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        height: \"70px\"\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    menuLogo: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    user: {\n        textTransform: 'uppercase',\n        background: '#fff',\n        color: '#000',\n        borderRadius: '50%',\n        width: '38px',\n        height: '38px',\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '1.3rem'\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '500px'\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n    rootclick: {\n        position: 'relative',\n    },\n    dropdown: {\n        position: 'absolute',\n        right: 0,\n        left: 0,\n        zIndex: 1,\n        padding:'8px',\n        border: '1px solid',\n        // padding: theme.spacing(1),\n        backgroundColor: \"#3f51b5\",\n        color: \"black\",\n        borderBottomLeftRadius:\"8px\",\n        borderBottomRightRadius:\"8px\"\n    },\n\n}));\n\nfunction MiniDrawer(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const [open, setOpen] = React.useState(false);\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const [openClick, setopenClick] = React.useState(false);\n    // const [searchResults, setSearchResults] = React.useState([]);\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [state, setState] = useState({\n        searchQuery: '',\n        searchQueryResult: null,\n        users: null\n    })\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClickAway = () => {\n        setopenClick(false);\n        setState({\n            ...state, searchQuery: ''\n        })\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const logoutUser = async () => {\n        await props.logout();\n        history.push(\"/login\");\n    }\n    const handleChangeSearch = (key, value) => {\n        setState({\n            ...state,\n            [key]: value\n        });\n    }\n    // const handleSearchChange = event => {\n    //     setSearchTerm(event.target.value);\n    //     const results = props.userState.users.filter(person =>\n    //         person.firstName.toLowerCase().indexOf(searchTerm) !== -1\n    //     );\n    //     setSearchResults(results);\n    // };\n\n    useEffect(() => {\n        if (!props.userState.isAuthenticated) {\n            history.push('/login');\n        }\n    }, [props, history]);\n\n    // React.useEffect(() => {\n    //     const results = props.userState.users.filter(person =>\n    //         person.toLowerCase().includes(searchTerm)\n    //     );\n    //     setSearchResults(results);\n    // }, [searchTerm]);\n\n\n    const handleSubmitSearch = async (e) => {\n        e.preventDefault();\n        setopenClick((prev) => !prev);\n        await props.searchUser({\n            searchQuery: state.searchQuery\n        });\n        //console.log(\"props\", props.group.searchQuery);\n        setState({ ...state, searchQueryResult: props.group.searchQuery });\n\n    };\n\n    const userDetailPage = async (id) => {\n        //console.log(id)\n        history.push(`/user/${id}`)\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar style={{ justifyContent: 'space-between' }}>\n                    <div className={classes.menuLogo}>\n                        <Typography variant=\"h6\" noWrap style={{ width: \"50px\", height: \"50px\", borderRadius: \"50%\" }}>\n                            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                                <img src={Ouricon} alt=\"user\" style={{ width: \"100%\", cursor: \"pointer\" }} />\n                            </Link>\n                        </Typography>\n                        <form className={classes.search} style={{ marginLeft: \"100px\" }} onSubmit={handleSubmitSearch}>\n                            <div className={classes.searchIcon} >\n                                <SearchIcon type=\"submit\" />\n                            </div>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                value={state.searchQuery}\n                                // value={searchTerm}\n                                // onChange={handleSearchChange}\n                                inputProps={{ 'aria-label': 'search' }}\n                                onChange={(e) => handleChangeSearch(\"searchQuery\", e.target.value)}\n                            />\n                            {/* <ul>\n                                {searchResults.map(item => (\n                                    <li key={item._id}>{item.firstName}</li>\n                                ))}\n                            </ul> */}\n                            <ClickAwayListener onClickAway={handleClickAway}>\n                                <div className={classes.rootclick}>\n                                    <div>\n                                        {\n                                            openClick ? (\n                                                <div className={classes.dropdown} >\n                                                    <Grid style={{ margin: '10px 0' }} container direction=\"column\" >\n                                                        {state.searchQueryResult && state.searchQueryResult.map((item) => (\n                                                            <Grid item key={item._id} onClick={() => userDetailPage(item._id)}>\n                                                                {/* <div style={{ color: \"white\" }}>\n                                                                    We have this user.\n                                                                </div> */}\n                                                                <Tooltip title=\"click for seen user Details\" aria-label=\"add\">\n                                                                    <Card style={{ cursor: \"pointer\" }}>\n                                                                        <CardHeader\n                                                                            avatar={\n                                                                                <Avatar alt=\"user\" src={item.photoURL || userimage} />\n                                                                            }\n                                                                            title={item.firstName + \" \" + item.lastName}\n                                                                        />\n                                                                    </Card>\n                                                                </Tooltip>\n                                                            </Grid>\n                                                        ))}\n                                                    </Grid>\n                                                </div>\n                                            ) : null}\n                                    </div>\n                                </div>\n\n                            </ClickAwayListener>\n\n                        </form>\n                    </div>\n                    {props.user &&\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleClick}\n                                color=\"inherit\"\n                            >\n                                <div>\n\n                                </div>\n                                {props.user.photoURL ? <img src={props.user.photoURL} alt={props.user.firstName} className={classes.user} />\n                                    : <span className={classes.user} style={{ padding: 4 }}>\n                                        {props.user.firstName[0]}{props.user.lastName[0]}\n                                    </span>\n                                }\n                            </IconButton>\n\n                            <Menu\n                                id=\"simple-menu\"\n                                anchorEl={anchorEl}\n                                keepMounted\n                                open={Boolean(anchorEl)}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}><Link to=\"/profile\" style={{ color: \"black\", textDecoration: \"none\" }}>Profile</Link></MenuItem>\n\n                                <MenuItem onClick={logoutUser}>Logout</MenuItem>\n                            </Menu>\n                        </div>\n                    }\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem button>\n                        <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                            <ListItemIcon style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minWidth: '30px' }}>\n                                <HomeIcon />\n                                <Typography variant=\"body2\">Home</Typography>\n                            </ListItemIcon>\n                        </Link>\n                    </ListItem>\n                    <ListItem button>\n                        <Link to=\"/friend\" style={{ textDecoration: \"none\" }}>\n                            <ListItemIcon style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minWidth: '30px' }}>\n                                <PersonIcon />\n                                <Typography variant=\"body2\">Friend</Typography>\n                            </ListItemIcon>\n                        </Link>\n                    </ListItem>\n                    <ListItem button>\n                        <Link to=\"/group\" style={{ textDecoration: \"none\" }}>\n                            <ListItemIcon style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', minWidth: '30px' }}>\n                                <PeopleAltIcon />\n                                <Typography variant=\"body2\">Group</Typography>\n                            </ListItemIcon>\n                        </Link>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n\n            </main>\n        </div >\n    );\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state.userState)\n    return {\n        user: state.userState.user,\n        isAuth: state.isAuthenticated,\n        group: state.groupReducer,\n        userState: state.userState,\n    }\n}\nexport default connect(mapStateToProps, { logout, searchUser })(MiniDrawer);","import { REQUEST, ALLREQUEST, UPDATEREQUEST, FRIENDS } from '../type';\nimport axios from 'axios';\n\n\nexport const sendRequest = (user) => async dispatch => {\n    console.log(user)\n    try {\n        const { data } = await axios({\n            method: \"post\",\n            url: '/request',\n            data: user,\n        }\n        );\n        //console.log('data',data)\n\n        dispatch({\n            type: REQUEST,\n            payload: {\n                error: null,\n                request: data\n            }\n        })\n    } catch (error) {\n        console.log(error)\n        dispatch({\n            type: REQUEST,\n            payload: {\n                error: error.response.data.error,\n                request: null\n            }\n        })\n    }\n}\n\nexport const allRequest = () => async dispatch => {\n    try {\n        const { data } = await axios(`/request/all`);\n        dispatch({\n            type: ALLREQUEST,\n            payload: { requests: data }\n        })\n    } catch (error) {\n        console.log(error)\n\n    }\n}\n\nexport const updatetRequest = (friend) => async dispatch => {\n    try {\n        const { data } = await axios({\n            method: \"put\",\n            url: '/request/update',\n            data: friend,\n        }\n        );\n        //console.log(data)\n        dispatch({\n            type: UPDATEREQUEST,\n            payload: {\n                error: null,\n                update: data\n            }\n        })\n    } catch (error) {\n        console.log(error)\n        console.log(error.response.data)\n        dispatch({\n            type: UPDATEREQUEST,\n            payload: {\n                error: error.response.data.error,\n                request: null\n            }\n        })\n    }\n}\n\nexport const allFriends = () => async dispatch => {\n    try {\n        const { data } = await axios(`/users/friend`);\n        //console.log('data', data)\n        dispatch({\n            type: FRIENDS,\n            payload: { friends: data }\n        })\n        //console.log(data)\n    } catch (error) {\n        console.log(error)\n    }\n}\n","import React, { Component } from 'react';\nimport Header from '../components/header';\nimport { connect } from 'react-redux';\nimport { allUser } from '../redux/action/user';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport userimage from '../assets/images/user.jpg';\nimport Grid from '@material-ui/core/Grid';\nimport { Paper } from '@material-ui/core';\nimport { sendRequest, allRequest, updatetRequest } from '../redux/action/request';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Home extends Component {\n    state = {\n        users: null,\n        snackbarOpen: false,\n        snackbarMessage: \"\",\n        snackbarSeverity: \"success\"\n    }\n    async componentDidMount() {\n        if (this.props.userState.user) {\n            if (!this.props.userState.users) {\n                await this.props.allUser();\n            }\n            await this.props.allRequest();\n            this.setState({\n                users: this.props.userState.users,\n            })\n            //console.log(this.props.request.requests)\n            await this.props.updatetRequest();\n            console.log(this.props, \"user\")\n        }\n    }\n\n    connect = async (receiver) => {\n        await this.props.sendRequest({\n            receiver: receiver,\n            sender: this.props.userState.user.id\n        });\n        // console.log('message',this.props.request.error);\n        if (this.props.request.error) {\n            this.setState({\n                snackbarOpen: true,\n                snackbarMessage: this.props.request.error,\n                snackbarSeverity: 'error'\n            })\n        } else {\n            this.setState({\n                snackbarOpen: true,\n                snackbarMessage: this.props.request.request.message\n            })\n\n        }\n    }\n    acceptGroupRequest = async (id, groupId) => {\n        await this.props.updatetRequest({\n            isAccepted: true,\n            id,\n            groupId\n        });\n        this.setState({\n            snackbarOpen: true,\n            snackbarMessage: \"Accept request successfully\"\n        });\n        await this.props.allRequest();\n    }\n    Accept = async (id, friend) => {\n        await this.props.updatetRequest({\n            isAccepted: true,\n            id,\n            friend\n        });\n        this.setState({\n            snackbarOpen: true,\n            snackbarMessage: \"Accept request successfully\"\n        });\n        await this.props.allRequest();\n\n    }\n    Reject = async (id) => {\n        await this.props.updatetRequest({\n            isReject: true,\n            id\n        });\n        this.setState({\n            snackbarOpen: true,\n            snackbarMessage: \"Reject request successfully\",\n            snackbarSeverity: 'error'\n        })\n        await this.props.allRequest();\n\n    }\n\n\n\n    showSnackbar = () => {\n        return <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={this.state.snackbarOpen}\n            onClose={() => { this.setState({ snackbarOpen: false }) }}\n            autoHideDuration={3000}\n        >\n            <MuiAlert severity={this.state.snackbarSeverity} variant=\"filled\">\n                {this.state.snackbarMessage}\n            </MuiAlert>\n        </Snackbar>\n    }\n    render() {\n\n        return (\n            <div className=\"backgrnd-home\" style={{ marginLeft: \"100px\" }}>\n                <Header />\n                {this.state.users ?\n                    <div className=\"row\">\n                        <Grid container >\n                            <Grid container item spacing={3} xs={12} sm={12} md={8}>\n                                {this.state.users && this.state.users.map((item) => (\n                                    <Grid item xs={12} sm={4} key={item._id}>\n                                        <Card style={{ maxWidth: \"200px\" }} className=\"col-2\">\n                                            <CardMedia\n                                                className=\"user-image\"\n                                                component=\"img\"\n                                                image={item.photoURL || userimage}\n                                                title=\"user image\"\n                                            />\n                                            <CardActions style={{ justifyContent: 'center', flexDirection: 'column' }}>\n                                                <Typography style={{ fontWeight: \"bold\" }}>\n                                                    {item.firstName + \" \" + item.lastName}\n                                                </Typography>\n                                                <Button variant=\"outlined\" color=\"primary\" onClick={() => this.connect(item._id)}>Add Friend</Button>\n                                            </CardActions>\n\n                                        </Card>\n                                    </Grid>\n                                ))}\n\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={4}>\n                                <Paper style={{ padding: '1rem' }}>\n                                    <div style={{ textAlign: \"center\" }} >\n                                        <h3>Requests</h3>\n                                        {this.props.request.requests.length > 0 ?\n                                            <div>\n                                                {\n                                                    this.props.request.requests && this.props.request.requests.map((item) => (\n                                                        <Paper key={item._id} style={{ margin: \"10px\", padding: \"0 10px\" }} >\n                                                            {item.sender &&\n                                                                <Grid container spacing={1} justify=\"space-between\" alignItems=\"center\">\n                                                                    <Grid item >\n                                                                        <img alt=\"user\" src={item.sender.photoURL || userimage} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50px\" }} />\n                                                                    </Grid>\n                                                                    <Grid item >\n                                                                        {item.sender.firstName + \" \" + item.sender.lastName}\n                                                                    </Grid>\n\n                                                                    <Grid item >\n                                                                        {/* <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => this.Accept(item._id, item.sender._id)}>\n                                                                            <CheckIcon />\n                                                                        </IconButton> */}\n                                                                        <Button size=\"small\" color=\"primary\" className=\"request-btn\" variant=\"contained\" onClick={() => this.Accept(item._id, item.sender._id)}>\n                                                                            Accept\n                                                                        </Button>\n                                                                    </Grid>\n                                                                    <Grid item >\n                                                                        {/* <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => this.Reject(item._id)}>\n                                                                            <ClearIcon />\n                                                                        </IconButton> */}\n                                                                        <Button size=\"small\" className=\"request-btn\" color=\"secondary\" variant=\"contained\" onClick={() => this.Reject(item._id)}>\n                                                                            Reject\n                                                                        </Button>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            }\n                                                            {item.groupId &&\n                                                                <Grid container spacing={1} justify=\"space-between\" alignItems=\"center\">\n\n                                                                    <Grid item >\n                                                                        <img alt=\"user\" src={item.groupId.photoURL || userimage} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50px\" }} />\n                                                                    </Grid>\n                                                                    <Grid item >\n                                                                        {item.groupId.groupName}\n                                                                    </Grid>\n                                                                    <Grid item >\n                                                                        {/* <IconButton aria-label=\"delete\" color=\"primary\" onClick={() => this.acceptGroupRequest(item._id, item.groupId._id)}>\n                                                                            <CheckIcon />\n                                                                        </IconButton> */}\n                                                                        <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={() => this.acceptGroupRequest(item._id, item.groupId._id)}>\n                                                                            Accept\n                                                                        </Button>\n                                                                    </Grid>\n                                                                    <Grid item >\n                                                                        {/* <IconButton aria-label=\"delete\" color=\"secondary\" onClick={() => this.Reject(item._id)}>\n                                                                            <ClearIcon />\n                                                                        </IconButton> */}\n                                                                        <Button size=\"small\" color=\"secondary\" variant=\"contained\" onClick={() => this.Reject(item._id)}>\n                                                                            Reject\n                                                                        </Button>\n                                                                    </Grid>\n                                                                </Grid>\n                                                            }\n                                                        </Paper>\n                                                    ))\n                                                }\n                                            </div>\n                                            : <div>\n                                                No request\n                                        </div>\n                                        }\n                                    </div>\n\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </div>\n                    : <div className=\"loader\">\n                        <CircularProgress />\n                    </div>\n                }\n                {this.showSnackbar()}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        userState: state.userState,\n        request: state.requestReducer\n    }\n}\n\nexport default connect(mapStateToProps, { allUser, sendRequest, allRequest, updatetRequest })(Home);","import React, { useState } from 'react';\nimport Header from '../components/header';\nimport IconButton from '@material-ui/core/IconButton';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser } from '../redux/action/user';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Backdrop, CircularProgress } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    display: 'none',\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\nconst Profile = (props) => {\n  const classes = useStyles();\n  const user = useSelector(state => state.userState);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    userId: props?.user?.id,\n    token: props?.user?.token,\n    firstName: props?.user?.firstName,\n    lastName: props?.user?.lastName,\n    email: props?.user?.email,\n    isSubmitting: false,\n    removePhoto:false,\n    photoURL: props?.user?.photoURL,\n    file:null\n  });\n  const handleChange = (key, value) => {\n    const newState = { ...state };\n    newState[key] = value;\n    setState(newState);\n  }\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!state.photoURL && !state.firstName && !state.lastName) {\n      return\n    }\n    const newState = { ...state };\n    if(newState.removePhoto){\n      newState.photoURL = null;\n    }else{\n      newState.photoURL = newState.file || newState.photoURL;\n    }\n    newState.isSubmitting = true;\n    setState(newState);\n    console.log(newState);\n    await dispatch(updateUser(newState));\n    newState.isSubmitting = false;\n    newState.removePhoto = false;\n    setState(newState);\n    if (!user.error) {\n      history.push('/profile');\n    }\n  }\n  const removeImage = async (e) => {\n    console.log(props.user);\n    e.preventDefault();\n    const newState = { ...state };\n    newState.photoURL = null;\n    newState.file = null;\n    newState.removePhoto = true;\n    setState(newState);\n   // await dispatch(updateUser(state));\n   // newState.isSubmitting = false;\n   // if (!user.error) {\n   //   history.push('/profile');\n   // }\n  }\n  return props.user && (\n    <div>\n      <Header />\n      <main className=\"backgrnd\" style={{ marginLeft: \"100px\", textAlign: \"center\", marginTop: \"50px \" }} >\n        <div style={{ marginBottom: \"40px\" }}>\n          {state.file ? <img src={URL.createObjectURL(state.file)} style={{ borderRadius: \"50%\", width: \"200px\", height: \"200px\" }} alt={props.user.firstName} />\n            : state.photoURL ? <img src={state.photoURL} style={{ borderRadius: \"50%\", width: \"200px\", height: \"200px\" }} alt={props.user.firstName} />\n              : <span style={{ background: \"gray\", borderRadius: \"50%\", width: \"50%\", height: \"50%\", padding: \"40px\", color: \"#000\", fontSize: \"50px\", textTransform: \"uppercase\" }}>\n                {props.user.firstName[0]}{props.user.lastName[0]}\n              </span>\n          }\n        </div>\n\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n\n          <form onSubmit={handleSubmit} noValidate>\n            <Grid item xs={12}>\n              <Tooltip title=\"Remove Photo\">\n                <IconButton color=\"secondary\" aria-label=\"upload picture\" component=\"span\" disabled={state.isSubmitting}\n                  onClick={removeImage}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n              <input accept=\"image/*\"\n                id=\"icon-button-file\"\n                type=\"file\"\n                className={classes.input}\n                onChange={(e) => handleChange(\"file\", e.target.files[0])} />\n              <label htmlFor=\"icon-button-file\">\n                <Tooltip title=\"Upload Photo\">\n                  <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                    <PhotoCamera />\n                  </IconButton>\n                </Tooltip>\n              </label>\n            </Grid>\n            <Grid container spacing={2}>\n              <Grid item xs={12} >\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  value={state.firstName}\n                  onChange={(e) => handleChange(\"firstName\", e.target.value)}\n                  error={!!state.firstNameError}\n                  helperText={state.firstNameError}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  value={state.lastName}\n                  onChange={(e) => handleChange(\"lastName\", e.target.value)}\n                  error={!!state.lastNameError}\n                  helperText={state.lastNameError}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ margin: \"10px\" }}\n              disabled={state.isSubmitting}>\n              Update Details\n          </Button>\n          </form>\n        </Container>\n        <h3>\n          Name: {props.user.firstName + \" \" + props.user.lastName}\n        </h3>\n        <h3>\n          Email: {props.user.email}\n        </h3>\n      </main>\n      <Backdrop className={classes.backdrop} open={state.isSubmitting} >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  //console.log(\"pro\", state)\n  return {\n    user: state.userState.user,\n    isAuth: state.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps)(Profile);","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { connect } from 'react-redux';\nimport { changePassword } from '../redux/action/user';\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        background: '#fff',\n        padding: theme.spacing(3),\n        boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2), 0px 3px 4px 0px rgba(0,0,0,0.14), 0px 1px 8px 0px rgba(0,0,0,0.12)'\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Resetpassword = (props) => {\n    const classes = useStyles();\n   // const user = useSelector(state => state.userState);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        resetToken: \"\",\n        password: \"\",\n        isSubmitting: false,\n        email: props.match.params.email\n    });\n\n\n    const handleChange = (key, value) => {\n        setState({\n            ...state,\n            [key]: value\n        });\n    }\n\n    const reset = async (e) => {\n        e.preventDefault();\n        setState({ ...state, isSubmitting: true });\n\n        await dispatch(changePassword(state));\n        setState({ ...state, isSubmitting: false });\n        if (!props.user.error) {\n            history.push('/login');\n        }\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Reset Password\n        </Typography>\n                <form className={classes.form} noValidate onSubmit={reset}>\n                    <Grid>\n                        <h2> {props.match.params.email}</h2>\n                    </Grid>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"resetToken\"\n                        label=\"resetToken\"\n                        type=\"resetToken\"\n                        id=\"resetToken\"\n                        autoComplete=\"resetToken\"\n                        value={state.resetToken}\n                        onChange={(e) => handleChange(\"resetToken\", e.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={state.password}\n                        onChange={(e) => handleChange(\"password\", e.target.value)}\n                    />\n                    <Grid>\n                    <div className=\"error\">\n                            {props.user.error}\n                        </div>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Change Password\n          </Button>\n                    <Grid container>\n                        <Grid item xs>\n                        </Grid>\n                        <Grid item >\n                            Back to\n              <Link href=\"/\" variant=\"body2\" className=\"mt-2\">\n                                {\" Sign in\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        user: state.userState\n    }\n}\n\nexport default connect(mapStateToProps, { changePassword })(Resetpassword);","import React, { Component } from 'react';\nimport Header from '../components/header';\nimport { allFriends } from '../redux/action/request';\nimport { connect } from 'react-redux';\nimport { Card } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport userimage from '../assets/images/user.jpg';\nimport TextField from '@material-ui/core/TextField';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Avatar, CardHeader, Fab } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SendIcon from '@material-ui/icons/Send';\nimport * as io from 'socket.io-client';\nimport IconButton from '@material-ui/core/IconButton';\nimport { singleChat } from '../redux/action/chat';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Portal from '@material-ui/core/Portal';\nimport Picker from 'emoji-picker-react';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\n\nclass Friends extends Component {\n    state = {\n        friends: null,\n        selectFriend: null,\n        message: \"\",\n        messages: [],\n        user: this.props.user.user,\n        loading: false,\n        openemoji: false,\n        chosenEmoji: null\n    }\n    messageRef = React.createRef();\n    socket = null;\n    async componentDidMount() {\n        await this.props.allFriends();\n        // console.log(this.props)\n        await this.setState({ friends: this.props.friend.friends.friends });\n        //  console.log(this.state.friends);\n        this.socket = io(\"/\");\n        this.socket.emit('user-join', this.props.user.user.id);\n        this.socket.on('user-join', async (data) => {\n            const friends = [...this.state.friends];\n            for (let friend of friends) {\n                friend.unread = 0;\n                if (friend._id === data.userId) {\n                    friend.socketId = data.socketId\n                }\n            }\n            await this.setState({ friends });\n        });\n        this.socket.on('one-2-one', (data) => {\n            if ((data.sender === this.state.user.id) || (this.state.selectFriend && this.state.selectFriend._id === data.sender)) {\n                const messages = [...this.state.messages];\n                messages.push(data);\n                this.setState({ messages });\n            } else {\n                const friends = [...this.state.friends];\n                for (let friend of friends) {\n                    if (friend._id === data.sender) {\n                        friend.unread = friend.unread ? friend.unread + 1 : 1;\n                    }\n                }\n                this.setState({ friends });\n\n            }\n            this.scrollToBottom();\n        });\n    }\n\n    sendMessage = async (e) => {\n        e.preventDefault();\n        const message = {\n            name: this.state.user.firstName + \" \" + this.state.user.lastName,\n            photoURL: this.state.user.photoURL || null,\n            sender: this.state.user.id,\n            message: this.state.message,\n            socketId: this.state.selectFriend.socketId,\n            receiver: this.state.selectFriend._id\n        }\n        //console.log(this.socket.id);\n        //console.log(message);\n        if (this.state.message) {\n            this.socket.emit('one-2-one', message);\n            this.setState({\n                ...this.state,\n                message: ''\n            })\n        }\n\n    }\n\n\n\n    handleClose() {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleSave(files) {\n        //Saving files to state for further use and closing Modal.\n        this.setState({\n            files: files,\n            open: false\n        });\n        console.log(files)\n    }\n\n    handleOpen() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    // hanleSearchChange = (e) => {\n    //     this.setState({\n    //         chatMessage: e.target.value\n    //     })\n    // }\n    renderCards = () => {\n        console.log(\"inside renderrrr\", this.props.chats)\n        this.props.chats.chats\n            && this.props.chats.chats.chats.map((chat) => (\n                {/*<ChatCard  key={chat._id}  {...chat} />*/ }\n            ));\n    }\n    handleFrndChat = async (item) => {\n        //console.log(item)\n        item.unread = 0;\n        await this.setState({\n            selectFriend: item\n        });\n        this.setState({\n            loading: true\n        });\n        await this.props.singleChat(item._id);\n        //console.log(this.props.chats.singleMessages)\n        await this.setState({\n            messages: this.props.chats.singleMessages\n        })\n        await this.setState({\n            loading: false\n        });\n        this.scrollToBottom();\n    }\n\n    onChangeHandler = (event) => {\n        console.log(event.target.files[0]);\n        const message = {\n            name: this.state.user.firstName + \" \" + this.state.user.lastName,\n            photoURL: this.state.user.photoURL || null,\n            sender: this.state.user.id,\n            file: event.target.files[0],\n            fileName: event.target.files[0].name,\n            type: event.target.files[0].type,\n            socketId: this.state.selectFriend.socketId,\n            receiver: this.state.selectFriend._id\n        }\n        this.socket.emit('single-fileupload', message);\n    }\n\n    handleClickEmoji = () => {\n        this.setState({\n            openemoji: true\n        })\n    };\n\n    handleClickAwayEmoji = () => {\n        this.setState({\n            openemoji: false\n        })\n        // setOpenEmoji(false);\n    };\n\n    onEmojiClick = async (event, emojiObject) => {\n        // this.setState(emojiObject);\n        //console.log(emojiObject.emoji)\n        await this.setState({\n            ...this.state, message: this.state.message + emojiObject.emoji\n        })\n        this.setState({\n            chosenEmoji: false\n        })\n    };\n\n    scrollToBottom = () => {\n        this.messageRef.current && this.messageRef.current.scrollIntoView();\n    }\n    render() {\n        return (\n            <div className=\"backgrnd\" style={{ marginLeft: \"100px\" }}>\n                <Header />\n                {this.state.friends ?\n                    <Grid container >\n                        <Grid item sm={3} >\n                            <div className=\"friend-list\">\n                                <Grid container direction=\"column\" alignItems=\"flex-start\">\n                                    {this.state.friends && this.state.friends.map((item) => (\n                                        <Grid item key={item._id} style={{ margin: '10px 0' }}>\n                                            <Card className=\"backgrnd\" onClick={() => this.handleFrndChat(item)} style={this.state.selectFriend && this.state.selectFriend._id === item._id ? { backgroundColor: '#bbb' } : { cursor: 'pointer' }}>\n                                                <CardHeader\n                                                    avatar={\n                                                        <Avatar alt=\"user\" src={item.photoURL || userimage} />\n                                                    }\n                                                    title={item.firstName + \" \" + item.lastName}\n                                                    action={\n                                                        <span className='unread'>\n                                                            {item.unread > 0 && item.unread}\n                                                        </span>\n                                                    }\n                                                    subheader={\n                                                        <div>\n                                                            Last seen:{new Date(item.updatedAt).toLocaleTimeString()}\n                                                        </div>\n                                                    }\n                                                />\n                                            </Card>\n                                        </Grid>\n                                    ))}\n                                </Grid>\n                            </div>\n                        </Grid>\n                        <Grid item sm={9}>\n                            <div>\n                                {!this.state.selectFriend ?\n                                    <div>\n                                        {this.state.friends.length === 0 ?\n                                            <h1>You don't have any friend.</h1>\n                                           : <h1>Click on any friend to start conversation.</h1>\n                                        }\n                                    </div>\n                                    :\n                                    <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                        <AppBar position=\"relative\" style={{ background: \"#37474f\" }}>\n                                            <Toolbar>\n                                                <Typography variant=\"h6\" className=\"title\" noWrap>\n                                                    <CardHeader\n                                                        avatar={\n                                                            <Avatar alt=\"user\" src={this.state.selectFriend.photoURL || userimage} />\n                                                        }\n                                                        title={this.state.selectFriend.firstName + ' ' + this.state.selectFriend.lastName}\n                                                        subheader={\n                                                            <div className=\"time\">Last seen:{new Date(this.state.selectFriend.updatedAt).toLocaleTimeString() + ' ' + new Date(this.state.selectFriend.updatedAt).toLocaleDateString()}\n                                                            </div>\n                                                        }\n                                                    />\n                                                </Typography>\n                                                <Tooltip title=\"Share documents\" aria-label=\"add\">\n                                                    <Fab size=\"small\" style={{ marginRight: \"8px\" }}>\n                                                        <input accept=\"image/*,video/*,application/pdf\" className='input' id=\"icon-button-file\" type=\"file\" onChange={this.onChangeHandler} />\n                                                        <label htmlFor=\"icon-button-file\" >\n                                                            <IconButton type=\"file\" aria-label=\"upload picture\" component=\"span\">\n                                                                <AttachmentIcon />\n                                                            </IconButton>\n                                                        </label>\n                                                    </Fab>\n                                                </Tooltip>\n                                            </Toolbar>\n                                        </AppBar>\n                                        <div className=\"chat-box\">\n                                            <Grid className=\"messages\">\n                                                {this.state.loading && <div className=\"loader\"><CircularProgress /></div>}\n                                                {this.state.messages.map(item => (\n                                                    <Grid item xs={12} key={item._id} style={{ padding: '8px' }} ref={this.messageRef}>\n                                                        <div className=\"message\">\n                                                            <Avatar className=\"message-photo\" src={item.photoURL || userimage} alt=\"message\" />\n                                                            <div className=\"message-name\">{item.name}</div>\n                                                        </div>\n                                                        {item.file ?\n                                                            <>\n                                                                {item?.type.indexOf('video') !== -1 ?\n                                                                    <video width=\"320\" height=\"240\" controls autoPlay>\n                                                                        <source src={`/uploads/${item.file}`} type={item.type} />\n                                                                    </video>\n                                                                    :\n                                                                    item?.type.indexOf('pdf') !== -1 || item?.type.indexOf('text') !== -1 ?\n                                                                        <div className=\"message-content\">\n                                                                            <a className=\"send-link\" target=\"_blank\" rel=\"noopener noreferrer\" href={\"/uploads/\" + item.file}>{item.fileName || 'open pdf'}</a>\n                                                                        </div>\n                                                                        :\n                                                                        <img className=\"message-file\" src={`/uploads/${item.file}`} alt={item.file} />\n                                                                }\n                                                            </>\n                                                            :\n                                                            <div className=\"message-content\">{item.message}</div>\n                                                        }\n                                                    </Grid>\n                                                ))}\n                                            </Grid>\n                                            <form className=\"message-form\" onSubmit={this.sendMessage}>\n                                                <Grid container>\n                                                    <Grid item xs={1} sm={1}>\n                                                        <div>\n                                                            <ClickAwayListener onClickAway={this.handleClickAwayEmoji}>\n                                                                <div>\n                                                                    <InsertEmoticonIcon onClick={this.handleClickEmoji} style={{ cursor: \"pointer\" }} />\n                                                                    {this.state.openemoji ? (\n                                                                        <Portal>\n                                                                            <div className=\"emoji-class\">\n                                                                                <Picker onEmojiClick={this.onEmojiClick} />\n                                                                            </div>\n                                                                        </Portal>\n                                                                    ) : null}\n                                                                </div>\n                                                            </ClickAwayListener>\n                                                        </div>\n                                                    </Grid>\n                                                    <Grid item xs={9} sm={10}>\n                                                        <TextField\n                                                            fullWidth\n                                                            name=\"message\"\n                                                            variant=\"outlined\"\n                                                            autoComplete=\"off\"\n                                                            size=\"small\"\n                                                            value={this.state.message}\n                                                            onChange={(e) => this.setState({ message: e.target.value })}\n                                                        />\n                                                    </Grid >\n                                                    <Grid item xs={2} sm={1}>\n                                                        <Fab style={{\n                                                            width: \"40px\",\n                                                            height: \"40px\"\n                                                        }} type=\"submit\"><SendIcon /></Fab>\n                                                    </Grid>\n                                                </Grid>\n                                            </form>\n\n                                        </div>\n\n                                    </div>\n\n                                }\n                            </div>\n\n                        </Grid>\n                    </Grid>\n                    : <div className='loader'>\n                        <CircularProgress />\n                    </div>\n                }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    //console.log(\"state11\", state)\n    //console.log(\"chat\", state.singleChatReducer)\n    return {\n        friend: state.requestReducer,\n        user: state.userState,\n        chats: state.chatReducer\n    }\n}\n\n\nexport default connect(mapStateToProps, { allFriends, singleChat })(Friends);","import { ALLMESSAGE, SINGLECHAT } from '../type';\nimport axios from 'axios';\nexport const allMessage = (groupId) => async (dispatch) => {\n    try {\n        axios.defaults.withCredentials = true;\n        const { data } = await axios(`/chat/${groupId}`);\n        dispatch({\n            type: ALLMESSAGE,\n            payload: { messages: data }\n        })\n    } catch (error) {\n        console.log(error)\n        console.log(error.response.data)\n        dispatch({\n            type: ALLMESSAGE,\n            payload: {\n                error: error.response.data.error,\n                group: null\n            }\n        })\n    }\n}\n\nexport const singleChat = (friendId) => async (dispatch) => {\n    try {\n        axios.defaults.withCredentials = true;\n        const { data } = await axios(`/chat/single/${friendId}`);\n        dispatch({\n            type: SINGLECHAT,\n            payload: { singleMessages: data }\n        })\n    } catch (error) {\n        console.log(error)\n        console.log(error.response.data)\n        dispatch({\n            type: SINGLECHAT,\n            payload: {\n                error: error.response.data.error,\n                group: null\n            }\n        })\n    }\n}","import React, { useState, useEffect, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Header from '../components/header';\nimport { connect } from 'react-redux';\nimport { createGroup, findGroups, searchUser } from '../redux/action/group';\nimport { allMessage } from '../redux/action/chat';\nimport { useDispatch } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport userimage from '../assets/images/user.jpg';\nimport { Card, Avatar, CardHeader, Fab } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { sendRequest } from '../redux/action/request';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport * as io from 'socket.io-client';\nimport SendIcon from '@material-ui/icons/Send';\nimport Picker from 'emoji-picker-react';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Portal from '@material-ui/core/Portal';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: \"100%\"\n    },\n    root1: {\n        display: 'flex',\n        justifyContent: \"center\",\n        height: \"100vh\",\n        alignItems: \"center\"\n    },\n\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n    input: {\n        display: 'none',\n    },\n    dropdown: {\n        position: 'fixed',\n        width: 200,\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        border: '1px solid',\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n    }\n}));\n\nconst Group = (props) => {\n    const messageRef = useRef();\n    const classes = useStyles();\n    const [openemoji, setOpenEmoji] = React.useState(false);\n\n    const handleClickEmoji = () => {\n        setOpenEmoji((prev) => !prev);\n    };\n\n    const handleClickAwayEmoji = () => {\n        setOpenEmoji(false);\n    };\n\n    const [open, setOpen] = React.useState(false);\n    const [openSearchDialog, setopenSearchDialog] = React.useState(false)\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        groupName: null,\n        isSubmitting: null,\n        photoURL: null,\n        searchQuery: null,\n        searchQueryResult: null,\n        selectedGroup: null,\n        snackbarOpen: false,\n        snackbarMessage: \"\",\n        snackbarSeverity: \"success\",\n        user: props.userState.user,\n        message: \"\"\n    });\n\n    //const [chosenEmoji, setChosenEmoji] = useState(null);\n    const onEmojiClick = async (event, emojiObject) => {\n        // setChosenEmoji(emojiObject);\n        //console.log(emojiObject)\n        await setState({\n            ...state, message: state.message + emojiObject.emoji\n        })\n    };\n\n    const [loading, setLoading] = useState(false)\n    const [messages, setMessages] = useState([]);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const socket = io(\"/\");\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleClickOpenSearch = () => {\n        setopenSearchDialog(true);\n    };\n    const handleCloseSearch = () => {\n        setopenSearchDialog(false);\n    };\n\n    const handleChange = (key, value) => {\n        setState({\n            ...state,\n            [key]: value\n        });\n    }\n    const handleSubmit = async (e) => {\n        // e.preventDefault();\n        setState({ ...state, isSubmitting: true });\n        await dispatch(createGroup(state));\n        setState({ ...state, isSubmitting: false });\n        props.findGroups();\n        setOpen(false);\n    }\n    const handleChangeSearch = (key, value) => {\n        setState({\n            ...state,\n            [key]: value\n        });\n    }\n    const handleSubmitSearch = async (e) => {\n        await props.searchUser({\n            searchQuery: state.searchQuery\n        });\n        //console.log(\"props\", props.group.searchQuery);\n        setState({ ...state, searchQueryResult: props.group.searchQuery });\n    };\n    const sendGroupRequest = async (receiver) => {\n        await props.sendRequest({\n            receiver: receiver,\n            groupId: state.selectedGroup._id\n        });\n        if (props.request.error) {\n            setState({\n                ...state,\n                snackbarOpen: true,\n                snackbarMessage: props.request.error,\n                snackbarSeverity: 'error'\n            })\n        } else {\n            setState({\n                ...state,\n                snackbarOpen: true,\n                snackbarMessage: props.request.request.message\n            })\n\n        }\n        setopenSearchDialog(false);\n        setTimeout(() => {\n            setState({\n                ...state,\n                selectedGroup: state.selectedGroup\n            })\n        }, 2000)\n    }\n\n    useEffect(() => {\n        dispatch(findGroups());\n        //console.log(props)\n    }, [dispatch]);\n\n    socket.on('message', (data) => {\n        setMessages(messages => messages.concat(data));\n        scrollToBottom();\n\n    })\n\n    const openChatting = async (item) => {\n        //console.log(item)\n        setState({\n            ...state, selectedGroup: item,\n        });\n        setLoading(true)\n        await props.allMessage(item._id);\n        setMessages(props.chat.messages)\n        setLoading(false);\n        socket.emit('join', item._id);\n        scrollToBottom();\n    }\n\n\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n        const message = {\n            name: state.user.firstName + \" \" + state.user.lastName,\n            photoURL: state.user.photoURL || null,\n            sender: state.user.id,\n            message: state.message,\n            groupId: state.selectedGroup._id,\n        }\n        if (state.message) {\n            socket.emit('message', message);\n            setState({\n                ...state,\n                message: \"\"\n            })\n        }\n\n    }\n    const onChangeHandler = (event) => {\n        console.log(event.target.files[0]);\n        const message = {\n            name: state.user.firstName + \" \" + state.user.lastName,\n            photoURL: state.user.photoURL || null,\n            sender: state.user.id,\n            file: event.target.files[0],\n            type: event.target.files[0].type,\n            fileName: event.target.files[0].name,\n            groupId: state.selectedGroup._id,\n        }\n        console.log(state)\n        socket.emit('fileupload', message);\n    }\n\n    const showSnackbar = () => {\n        return <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={state.snackbarOpen}\n            onClose={() => { setState({ snackbarOpen: false }) }}\n            autoHideDuration={3000}\n        >\n            <MuiAlert severity={state.snackbarSeverity} variant=\"filled\">\n                {state.snackbarMessage}\n            </MuiAlert>\n        </Snackbar>\n    }\n\n    const scrollToBottom = () => {\n        if (messageRef.current) {\n            messageRef.current.scrollIntoView();\n        }\n    }\n    return (\n        <div className=\"backgrnd\" style={{ marginLeft: \"100px\" }} >\n            <Header />\n            {props.group.groups ?\n                <Grid container>\n                    <Grid item sm={3} style={{ marginTop: \"25px\" }}>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                            Create a New Group\n      </Button>\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">New Group</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    To create a new group\n          </DialogContentText>\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"Group name\"\n                                    label=\" Group name\"\n                                    type=\"text\"\n                                    fullWidth\n                                    required\n                                    onChange={(e) => handleChange(\"groupName\", e.target.value)}\n                                />\n                                <TextField\n                                    margin=\"dense\"\n                                    id=\"group logo\"\n                                    label=\" Group logo\"\n                                    type=\"text\"\n                                    fullWidth\n                                    required\n                                    onChange={(e) => handleChange(\"photoURL\", e.target.value)}\n                                />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button onClick={handleClose} color=\"primary\">\n                                    Cancel\n          </Button>\n                                <Button onClick={handleSubmit} disabled={state.isSubmitting || !(state.photoURL && state.groupName)} color=\"primary\">\n                                    Done\n          </Button>\n                            </DialogActions>\n                        </Dialog>\n                        <div className=\"group-list\">\n                            <Grid container direction=\"column\" alignItems=\"flex-start\">\n                                {props.group.groups && props.group.groups.map((item) => (\n                                    <Grid item key={item._id} style={{ margin: '10px 0' }}>\n                                        <Card onClick={() => openChatting(item)} style={state.selectedGroup && state.selectedGroup._id === item._id ? { backgroundColor: '#ccc' } : { cursor: 'pointer' }}>\n                                            <CardHeader\n                                                avatar={\n                                                    <Avatar alt=\"user\" src={item.photoURL || userimage} />\n                                                }\n                                                title={item.groupName}\n                                                subheader={\n                                                    <div>\n                                                        Created Date:{new Date(item.createdAt).toLocaleDateString()}\n                                                    </div>\n                                                }\n                                            />\n                                        </Card>\n\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </div>\n                    </Grid>\n\n                    <Grid item sm={9} >\n                        {!state.selectedGroup ?\n                            <div>\n                                {props.group.groups.length === 0 ?\n                                    <h1>you don't have any group.</h1>\n                                    :\n                                    <h1>\n                                        Click on any group for chatting.\n                            </h1>\n                                }\n                            </div>\n                            :\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\n                                <AppBar position=\"relative\" style={{ background: \"#37474f\" }}>\n                                    <Toolbar>\n                                        <Typography className={classes.title} variant=\"h6\" noWrap>\n                                            <CardHeader\n                                                avatar={\n                                                    <Avatar alt=\"user\" src={state.selectedGroup.photoURL || userimage} />\n                                                }\n                                                title={state.selectedGroup.groupName}\n                                            />\n\n                                        </Typography>\n                                        <div style={{ marginRight: \"10px\", color: \"lightblue\" }}>\n                                            {state.selectedGroup.member.length} Participants\n                                        </div>\n                                        <div >\n                                            <Tooltip title=\"Share documents\" aria-label=\"add\">\n                                                <Fab size=\"small\" style={{ marginRight: \"8px\" }}>\n                                                    <input accept=\"image/*,video/*,application/pdf\" className={classes.input} id=\"icon-button-file\" type=\"file\" onChange={onChangeHandler} />\n                                                    <label htmlFor=\"icon-button-file\" >\n                                                        <IconButton type=\"file\" aria-label=\"upload picture\" component=\"span\">\n                                                            <AttachmentIcon />\n                                                        </IconButton>\n                                                    </label>\n                                                </Fab>\n                                            </Tooltip>\n                                            {state.user.id === state.selectedGroup.owner &&\n                                                <Tooltip title=\"Add member\" aria-label=\"add\">\n                                                    <Fab size=\"small\" onClick={handleClickOpenSearch}>\n                                                        <PersonAddIcon />\n                                                    </Fab>\n                                                </Tooltip>\n                                            }\n                                            <Dialog open={openSearchDialog} onClose={handleCloseSearch} aria-labelledby=\"form-dialog-title\">\n                                                <DialogTitle id=\"form-dialog-title\">Search User</DialogTitle>\n                                                <DialogContent>\n                                                    <TextField\n                                                        autoFocus\n                                                        margin=\"dense\"\n                                                        id=\"search\"\n                                                        label=\"Search\"\n                                                        type=\"text\"\n                                                        fullWidth\n                                                        onChange={(e) => handleChangeSearch(\"searchQuery\", e.target.value)}\n                                                    />\n                                                </DialogContent>\n                                                <DialogActions>\n                                                    <Grid style={{ margin: '10px 0' }} container direction=\"column\">\n                                                        {state.searchQueryResult && state.searchQueryResult.map((item) => (\n                                                            <Grid item key={item._id}>\n                                                                <Tooltip title=\"click for send request\" aria-label=\"add\" style={{ cursor: 'pointer' }}>\n                                                                    <Card onClick={() => sendGroupRequest(item._id)}>\n                                                                        <CardHeader\n                                                                            avatar={\n                                                                                <Avatar alt=\"user\" src={item.photoURL || userimage} />\n                                                                            }\n                                                                            title={item.firstName + \" \" + item.lastName}\n                                                                        />\n                                                                    </Card>\n                                                                </Tooltip>\n                                                            </Grid>\n                                                        ))}\n                                                    </Grid>\n\n                                                </DialogActions>\n                                                <DialogActions>\n                                                    <Button onClick={handleCloseSearch} color=\"primary\">\n                                                        Cancel\n                                            </Button>\n                                                    <Button onClick={handleSubmitSearch} color=\"primary\">\n                                                        Search\n                                            </Button>\n                                                </DialogActions>\n                                            </Dialog>\n                                        </div>\n                                    </Toolbar>\n                                </AppBar>\n                                <div className=\"chat-box\">\n                                    <Grid className=\"messages\">\n                                        {loading && <div className={classes.root1}><CircularProgress /></div>}\n                                        {messages && messages.map(item => (\n                                            <Grid item xs={12} key={item._id} style={{ padding: '8px' }} ref={messageRef}>\n                                                <div className=\"message\">\n                                                    <Avatar className=\"message-photo\" src={item.phtoURL || userimage} alt=\"message\" />\n                                                    <div className=\"message-name\">{item.name}</div>\n                                                </div>\n                                                {item.file ?\n                                                    <>\n                                                        {item?.type.indexOf('video') !== -1 ?\n                                                            <video width=\"320\" height=\"240\" controls autoPlay>\n                                                                <source src={`/uploads/${item.file}`} type={item.typetype} />\n                                                            </video>\n                                                            :\n                                                            item?.type.indexOf('image') !== -1 ?\n                                                                <img className=\"message-file\" src={`/uploads/${item.file}`} alt={item.file} />\n                                                                : <div className=\"message-content\">\n                                                                    <a className=\"send-link\" target=\"_blank\" rel=\"noopener noreferrer\" href={\"/uploads/\" + item.file}>{item.fileName || 'open pdf'}</a>\n                                                                </div>\n                                                        }\n                                                    </>\n                                                    :\n                                                    <div className=\"message-content\">{item.message}</div>\n                                                }\n                                            </Grid>\n                                        ))}\n                                    </Grid>\n                                    <form className=\"message-form\" onSubmit={sendMessage}>\n                                        <Grid container>\n                                            <Grid item xs={1} sm={1}>\n                                                <div>\n                                                    <ClickAwayListener onClickAway={handleClickAwayEmoji}>\n                                                        <div>\n                                                            <InsertEmoticonIcon onClick={handleClickEmoji} style={{ cursor: \"pointer\" }} />\n                                                            {openemoji ? (\n                                                                <Portal>\n                                                                    <div className={classes.dropdown}>\n                                                                        <Picker onEmojiClick={onEmojiClick} />\n                                                                    </div>\n                                                                </Portal>\n                                                            ) : null}\n                                                        </div>\n                                                    </ClickAwayListener>\n                                                </div>\n                                            </Grid>\n                                            <Grid item xs={9} sm={10}>\n                                                <TextField\n                                                    fullWidth\n                                                    placeholder=\"type a message \"\n                                                    name=\"message\"\n                                                    variant=\"outlined\"\n                                                    autoComplete=\"off\"\n                                                    size=\"small\"\n                                                    value={state.message}\n                                                    onChange={(e) => setState({ ...state, message: e.target.value })}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={2} sm={1}>\n                                                <Fab style={{\n                                                    width: \"40px\",\n                                                    height: \"40px\"\n                                                }} type=\"submit\"><SendIcon /></Fab>\n                                            </Grid>\n                                        </Grid>\n                                    </form>\n                                </div>\n                            </div>\n                        }\n                    </Grid>\n\n                </Grid>\n                : <div className={classes.root1}>\n                    <CircularProgress />\n                </div>\n            }\n            {showSnackbar()}\n        </div >\n    );\n}\n\nconst mapStateToProps = (state) => {\n    //console.log(state.groupReducer.message)\n    return {\n        userState: state.userState,\n        group: state.groupReducer,\n        request: state.requestReducer,\n        chat: state.chatReducer\n    }\n}\n\nexport default connect(mapStateToProps, { createGroup, findGroups, searchUser, sendRequest, allMessage })(Group);\n","import React, { Component } from 'react';\nimport Header from '../components/header';\nimport { allUser, singleUser } from '../redux/action/user';\nimport { sendRequest } from '../redux/action/request';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport userimage from '../assets/images/user.jpg';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nclass Details extends Component {\n    state = {\n        user: null,\n        snackbarOpen: false,\n        snackbarMessage: \"\",\n        snackbarSeverity: \"success\"\n    }\n\n    connect = async (receiver) => {\n        await this.props.sendRequest({\n            receiver: receiver,\n            sender: this.props.userState.user.id\n        });\n        if (this.props.request.error) {\n            this.setState({\n                snackbarOpen: true,\n                snackbarMessage: this.props.request.error,\n                snackbarSeverity: 'error'\n            })\n        } else {\n            this.setState({\n                snackbarOpen: true,\n                snackbarMessage: this.props.request.request.message\n            })\n\n        }\n    }\n\n    showSnackbar = () => {\n        return <Snackbar\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n            open={this.state.snackbarOpen}\n            onClose={() => { this.setState({ snackbarOpen: false }) }}\n            autoHideDuration={3000}\n        >\n            <MuiAlert severity={this.state.snackbarSeverity} variant=\"filled\">\n                {this.state.snackbarMessage}\n            </MuiAlert>\n        </Snackbar>\n    }\n    async componentDidMount() {\n        //await this.props.allUser();\n        await this.props.singleUser(this.props.match.params.id);\n        //console.log(this.props.userState.oneuser)\n        await this.setState({ user: this.props.userState.oneuser });\n        // if (this.props.userState.oneuser.group && this.props.userState.oneuser.group.length > 0){\n        //     const groups=[];\n        //     this.props.userState.oneuser.group.forEach((groupId)=>{\n        //       const groupData = this.props.userState.users.\n        //     })\n        // }\n    }\n    render() {\n        return (\n            <div style={{ marginLeft: \"100px\" }}>\n                <Header />\n                {this.state.user ?\n                    <Grid container>\n                        <Grid item xs={12} sm={12} md={4}>\n                            <img height=\"300px\" width=\"300px\" alt=\"user\" src={this.state.user.photoURL || userimage} />\n                            <h1>Name: {this.state.user.firstName + \" \" + this.state.user.lastName}</h1>\n                            <h2>Email: {this.state.user.email}</h2>\n                            <h3>Join date : {new Date(this.state.user.createdAt).toLocaleDateString()}</h3>\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={4}>\n                            <Tooltip title=\"send Request\" aria-label=\"add\">\n                                <Button variant=\"contained\" color=\"primary\" size=\"large\" style={{ marginLeft: \"60px\" }} onClick={() => this.connect(this.state.user._id)}>connect</Button>\n                            </Tooltip>\n                            <h1>Friends</h1>\n                            {this.state.user?.friends.map((fr) => (\n                                <div key={fr._id}>\n                                    {/* <h3>{fr.firstName} {fr.lastName}</h3> */}\n                                    <Card className=\"friend\">\n                                        <CardHeader\n                                            avatar={\n                                                <Avatar alt=\"user\" src={fr.photoURL || userimage} />\n                                            }\n                                            title={fr.firstName + \" \" + fr.lastName}\n                                        />\n                                    </Card>\n                                </div>\n                            ))}\n                        </Grid>\n                        <Grid item xs={12} sm={12} md={4}>\n                            <div >\n                                <h3>last login date: {new Date(this.state.user.updatedAt).toLocaleDateString()}</h3>\n                            </div>\n                            <h1>Groups</h1>\n                            {this.state.user?.group.map((fr) => (\n                                <div key={fr._id}>\n                                    {/* <h3>{fr.firstName} {fr.lastName}</h3> */}\n                                    <Card className=\"friend\">\n                                        <CardHeader\n                                            avatar={\n                                                <Avatar alt=\"user\" src={fr.photoURL || userimage} />\n                                            }\n                                            title={fr.groupName}\n                                        />\n                                    </Card>\n                                </div>\n                            ))}\n                        </Grid>\n                    </Grid>\n                    : <div className=\"loader\">\n                        <CircularProgress />\n                    </div>\n                }\n                {this.showSnackbar()}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userState: state.userState,\n        request: state.requestReducer\n    }\n}\nexport default connect(mapStateToProps, { allUser, sendRequest, singleUser })(Details);","import React, { Component } from \"react\";\nimport Login from './components/login';\nimport Register from './components/register';\nimport forgotPassword from './components/forgotPassword';\nimport Home from './page/home';\n//import Header from './components/header';\nimport Profile from './page/profile';\nimport { HashRouter, Route } from 'react-router-dom';\nimport resetPassword from './components/resetpassword';\nimport Friends from './page/friend';\nimport Groups from './page/group';\nimport Details from './page/userdetail';\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <HashRouter>\n                    <Route path=\"/\" component={Home} exact />\n                    <Route path=\"/login\" component={Login} exact />\n                    <Route path=\"/register\" component={Register} exact />\n                    <Route path=\"/forgotPassword\" component={forgotPassword} exact />\n                    <Route path=\"/Profile\" component={Profile} exact />\n                    <Route path=\"/resetPassword/:email\" component={resetPassword} exact />\n                    <Route path=\"/friend\" component={Friends} exact />\n                    <Route path=\"/group\" component={Groups} exact />\n                    <Route path=\"/user/:id\" component={Details} />\n                </HashRouter>\n            </div>\n        )\n    }\n}\n\nexport default App;","import { REGISTER, LOGOUT, LOGIN, UPDATEUSER, ALLUSER, FORGOTPASSWORD, CHANGEPASSWORD, SINGLEUSER } from '../type';\n\nconst initalstate = {\n    user: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null,\n    isAuthenticated: localStorage.getItem(\"isAuth\") || false,\n    info: null,\n    error: null,\n    users: null,\n    useremail: null,\n    oneuser: null,\n    search: null\n}\n\nconst userReducer = (state = initalstate, action) => {\n    const { type, payload } = action;\n    //console.log(type,payload)\n    switch (type) {\n        case REGISTER:\n            const newState = Object.assign(state, payload);\n            return newState;\n        // return {\n        //     ...state, info: payload.info, error: payload.error\n        // }\n        case LOGIN:\n            if (payload.user) {\n                localStorage.setItem('user', JSON.stringify(payload.user));\n                localStorage.setItem('isAuth', true);\n            }\n            return Object.assign(state, payload);\n        case LOGOUT:\n            localStorage.removeItem(\"user\")\n            localStorage.removeItem(\"isAuth\")\n            return { ...state, user: null, isAuthenticated: false }\n        case ALLUSER:\n            return Object.assign(state, payload);\n        case FORGOTPASSWORD:\n            const newState1 = Object.assign(state, payload)\n            // console.log(newState1)\n            return newState1\n        case UPDATEUSER:\n            const user = { ...state.user, photoURL: payload.photoURL, firstName: payload.firstName, lastName: payload.lastName }\n            //console.log(payload)\n            //console.log(user)\n            localStorage.setItem('user', JSON.stringify(user));\n            return { ...state, user };\n        case CHANGEPASSWORD:\n            if (payload.user) {\n                localStorage.setItem('user', JSON.stringify(payload.user));\n            }\n            return Object.assign(state, payload);\n        case SINGLEUSER:\n            return Object.assign(state, payload);\n        default:\n            return state;\n    }\n\n}\n\n\nexport default userReducer;","import { REQUEST, ALLREQUEST, UPDATEREQUEST, FRIENDS } from '../type';\n\nconst initalstate = {\n    request: null,\n    error: null,\n    requests: null,\n    update: null,\n    friends: null\n}\n\nconst requestReducer = (state = initalstate, action) => {\n    const { type, payload } = action;\n    //console.log(payload)\n    switch (type) {\n        case REQUEST:\n            const newState = Object.assign(state, payload);\n            //console.log(newState)\n            return newState;\n        case ALLREQUEST:\n            return Object.assign(state, payload);\n        case UPDATEREQUEST:\n            return Object.assign(state, payload);\n        case FRIENDS:\n            return Object.assign(state, payload)\n        default:\n            return state;\n    }\n}\n\nexport default requestReducer;","import { CREATEGROUP, FINDGROUP, SEARCHUSER, ALLMESSAGE } from '../type';\n\nconst initalstate = {\n    group: null,\n    error: null,\n    info: null,\n    groups: null,\n    searchQuery: null,\n    message: null\n}\n\nconst groupReducer = (state = initalstate, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case CREATEGROUP:\n            return { ...state, group: payload.group, error: payload.error };\n        case FINDGROUP:\n            return { ...state, groups: payload };\n        case SEARCHUSER:\n            return Object.assign(state, payload);\n        case ALLMESSAGE:\n            //console.log('payy', payload)\n            return { ...state, message: payload }\n        default:\n            return state;\n    }\n}\n\nexport default groupReducer;","import { ALLMESSAGE, SINGLECHAT } from '../type';\n\nconst initialState = {\n    messages: [],\n    singleMessages: []\n};\n\nconst ChatReducer = (state = initialState, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case ALLMESSAGE:\n            return Object.assign(state, payload);\n        case SINGLECHAT:\n            return Object.assign(state, payload);\n        default:\n            return state;\n    }\n}\n\nexport default ChatReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport userReducer from \"./reducer/user\";\nimport requestReducer from './reducer/request';\nimport thunk from 'redux-thunk';\nimport groupReducer from './reducer/group';\nimport chatReducer from './reducer/chat';\nconst rootReducer = combineReducers({ userState: userReducer, requestReducer, groupReducer, chatReducer })\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './app';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './style/style.css';\nReactDom.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);","module.exports = __webpack_public_path__ + \"static/media/ouricon.f99d5df3.jpg\";"],"sourceRoot":""}